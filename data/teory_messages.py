TEORY_MSGS = {
    "greeting text": "Привет! Это лучший телеграм бот по языку программирования Python!"
                     " Идеально подойдет как для изучения языка, так и для повторения материала!"
                     " Можно читать теорию или закреплять знания на практике в решении задач!"
                     " Используйте команду /learn чтобы начать!",
    "встроенные функции": "В Python существует множество встроенных функций,"
                          " которые могут быть очень полезными для разработки."
                          " Они облегчают выполнение различных задач и не требуют"
                          " установки дополнительных модулей."
                          " Вот некоторые из наиболее часто используемых:\n"
                          "1. print(): Используется для вывода данных на экран. Например:\n"
                          "```print('Hello, World!')```\n"
                          "выводит строку 'Hello, World!'.\n"
                          "2. input(): Позволяет получить ввод от пользователя"
                          " в виде строки. Например:\n"
                          "```name = input('Enter your name: ')```\n"
                          "сохранит введенное имя в переменной name.\n"
                          "3. len(): Возвращает длину (количество элементов) объектов,"
                          " таких как строки, списки и т.д. Например:\n"
                          "```len('hello')```"
                          "вернет 5.\n"
                          "4. type(): Возвращает тип объекта. Например:\n"
                          "```type(42)```"
                          " вернет <class 'int'>.\n"
                          "5. int(), float(), str(): Используются для "
                          "преобразования типов. Например:\n"
                          " int('42')\n"
                          "float('3.14')\n"
                          "str(123)\n"
                          "int('42') преобразует строку '42' в целое число,\n"
                          " float('3.14') превращает строку '3.14' в число с плавающей точкой,\n"
                          " а str(123) преобразует число 123 в строку '123'.\n"
                          "6. sum(): Возвращает сумму элементов в итерируемом"
                          " объекте, например, списке. Например:\n"
                          "```sum([1, 2, 3])```\n"
                          "вернет 6\n"
                          "7. min() и max(): Возвращают минимальный и максимальный"
                          " элементы из итерируемого объекта"
                          " соответственно. Например:\n"
                          "```min([1, 2, 3])"
                          "max([1, 2, 3])```\n"
                          "min([1, 2, 3]) вернет 1, а max([1, 2, 3]) вернет 3.\n"
                          "8. range(): Генерирует последовательность чисел. Например:\n"
                          "```range(5)```\n"
                          "создаст последовательность от 0 до 4.\n"
                          "9. list(), tuple(), set(): Эти функции используются"
                          " для создания списков, кортежей и множеств"
                          " соответственно. Например:\n"
                          "```list((1, 2, 3))```\n"
                          "превратит кортеж в список\n"
                          "10. sorted(): Возвращает новую"
                          " отсортированную версию итерируемого"
                          " объекта. Например:\n"
                          "```sorted([3, 1, 2])```"
                          "вернет [1, 2, 3].\n"
                          "11. abs(): Возвращает абсолютное значение числа. Например:\n"
                          "```abs(-5)```"
                          "вернет 5.\n"
                          "12. round(): Округляет число до заданного"
                          " количества десятичных знаков. Например:\n"
                          "```round(3.14159, 2)```\n"
                          "вернет 3.14.\n"
                          "Эти функции являются основой работы с данными"
                          " в Python и могут использоваться в сочетании друг"
                          " с другом для достижения более сложных целей."
                          " Они просты в использовании и дают вам возможность"
                          " быстро начать программировать на Python.",

}
